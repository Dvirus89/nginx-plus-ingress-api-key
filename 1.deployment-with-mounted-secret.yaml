apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: nginx-ingress
    namespace: nginx-ingress
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: nginx-ingress
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: nginx-ingress
          app.kubernetes.io/name: nginx-ingress
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - -nginx-plus
          - -nginx-configmaps=$(POD_NAMESPACE)/nginx-config
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: default-route-openshift-image-registry.apps.ocp.f5-udf.com/nginx-ingress/nginx-plus-ingress:3.3.2
          imagePullPolicy: IfNotPresent
          name: nginx-plus-ingress
          ports:
          - containerPort: 8888
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 8081
            name: readiness-port
            protocol: TCP
          - containerPort: 9113
            name: prometheus
            protocol: TCP
          - containerPort: 9114
            name: service-insight
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /nginx-ready
              port: readiness-port
              scheme: HTTP
            periodSeconds: 1
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            runAsNonRoot: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/nginx/conf.d/keys/
            name: keys-vol
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: nginx-ingress
        serviceAccountName: nginx-ingress
        terminationGracePeriodSeconds: 30
        volumes:
        - name: keys-vol
          secret:
            defaultMode: 420
            secretName: nginx-keys-secret
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2023-12-21T15:33:18Z"
      lastUpdateTime: "2023-12-21T15:33:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2023-12-07T12:50:43Z"
      lastUpdateTime: "2023-12-22T00:00:28Z"
      message: ReplicaSet "nginx-ingress-8d474848f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 18
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: List
metadata:
  resourceVersion: ""
